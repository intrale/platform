[versions]
kotlin = "2.0.0"

ktor = "2.3.9"

aws-lambda-java-core = "1.2.1"
aws-lambda-java-events = "3.11.4"
aws-lambda-java-log4j = "1.0.1"
aws-sdk-kotlin-cognito = "1.2.28"
aws-sdk-java = "2.25.28"

logback = "1.5.18"

serialization-json = "1.7.3"
gson = "2.10.1"

konform = "0.6.1"
kodein = "7.22.0"

java-jwt = "4.4.0"
jwks-rsa = "0.22.0"

shadow = "8.1.1"

java-otp = "0.4.0"
commons-codec = "1.15"

datafaker = "2.4.2"
mockk = "1.13.10"

# Multiplatform versions
agp = "8.7.3"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
androidx-activity = "1.10.1"
androidx-appcompat = "1.7.1"
androidx-constraintlayout = "2.2.1"
androidx-core = "1.16.0"
androidx-espresso = "3.6.1"
androidx-lifecycle = "2.9.1"
androidx-testExt = "1.2.1"
composeHotReload = "1.0.0-alpha11"
composeMultiplatform = "1.8.2"
junit = "4.13.2"
kotlin-multiplatform = "2.2.0"
kotlinx-coroutines = "1.10.2"
androidx-navigation = "2.7.0-alpha06"
ktor-wasm2 = "3.0.0-wasm2"
canard = "1.2.0"
russhwolf = "1.2.0"
buildkonfig = "0.13.3"

[libraries]
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests", version.ref = "ktor" }

ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor-wasm2" }
ktor-client-json = { group = "io.ktor", name = "ktor-client-json", version.ref = "ktor-wasm2" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor-wasm2" }
ktor-client-serialization = { group = "io.ktor", name = "ktor-client-serialization", version.ref = "ktor-wasm2" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor-wasm2" }
ktor-client-android = { group = "io.ktor", name = "ktor-client-android", version.ref = "ktor-wasm2" }
ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor-wasm2" }

kodein-di = { module = "org.kodein.di:kodein-di", version.ref = "kodein" }
kodein-di-framework-ktor-server-jvm = { module = "org.kodein.di:kodein-di-framework-ktor-server-jvm", version.ref = "kodein" }

konform = { module = "io.konform:konform", version.ref = "konform" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization-json" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

aws-sdk-dynamodb = { module = "software.amazon.awssdk:dynamodb", version.ref = "aws-sdk-java" }
aws-sdk-dynamodb-enhanced = { module = "software.amazon.awssdk:dynamodb-enhanced", version.ref = "aws-sdk-java" }
aws-sdk-regions = { module = "software.amazon.awssdk:regions", version.ref = "aws-sdk-java" }
aws-sdk-auth = { module = "software.amazon.awssdk:auth", version.ref = "aws-sdk-java" }

aws-lambda-java-core = { module = "com.amazonaws:aws-lambda-java-core", version.ref = "aws-lambda-java-core" }
aws-lambda-java-events = { module = "com.amazonaws:aws-lambda-java-events", version.ref = "aws-lambda-java-events" }
aws-lambda-java-log4j = { module = "com.amazonaws:aws-lambda-java-log4j", version.ref = "aws-lambda-java-log4j" }
cognito-identity-provider = { module = "aws.sdk.kotlin:cognitoidentityprovider", version.ref = "aws-sdk-kotlin-cognito" }
cognito-identity = { module = "aws.sdk.kotlin:cognitoidentity", version.ref = "aws-sdk-kotlin-cognito" }
secretsmanager = { module = "aws.sdk.kotlin:secretsmanager", version.ref = "aws-sdk-kotlin-cognito" }

java-jwt = { module = "com.auth0:java-jwt", version.ref = "java-jwt" }
jwks-rsa = { module = "com.auth0:jwks-rsa", version.ref = "jwks-rsa" }

eatthepath-java-otp = { module = "com.eatthepath:java-otp", version.ref = "java-otp" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commons-codec" }

kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
datafaker = { module = "net.datafaker:datafaker", version.ref = "datafaker" }

# Multiplatform libraries
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin-multiplatform" }
kotlin-testJunit-multiplatform = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin-multiplatform" }
junit = { module = "junit:junit", version.ref = "junit" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-testExt-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-testExt" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-espresso" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }
kotlinx-coroutinesSwing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
canard = { module = "org.kodein.log:canard", version.ref = "canard" }
settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "russhwolf" }
settings-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "russhwolf" }
settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "russhwolf" }

[bundles]
ktor-common = ["ktor-client-core", "ktor-client-json", "ktor-client-logging", "ktor-client-serialization", "ktor-client-content-negotiation", "ktor-serialization-kotlinx-json"]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }

# Multiplatform plugins
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeHotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "composeHotReload" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin-multiplatform" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin-multiplatform" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
buildkonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildkonfig" }